{"version":3,"sources":["views/assets/images sync /^/.//.*/.png$","views/assets/images/boxing.png","views/assets/images/darts.png","views/assets/images/suikyu.png","views/assets/images/sumo.png","views/styles/theme.js","views/containers/Home/index.js","state/combineReducers.js","state/ducks/app.js","state/ducks/quiz.js","state/configureStore.js","views/containers/Quiz/index.js","views/App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","createMuiTheme","palette","primary","main","secondary","Home","useState","isEnter","setIsEnter","push","to","Container","component","maxWidth","Grid","container","alignContent","justify","alignItems","item","xs","Typography","variant","Button","type","fullWidth","color","onClick","combineReducers","reducer","state","action","nextReducers","i","length","invoke","appState","quizState","questions","rootReducer","app","quiz","initialState","persistedState","JSON","parse","localStorage","getItem","name","version","StoreContext","createContext","merge","StoreProvider","children","useReducer","dispatch","useEffect","setItem","stringify","Provider","value","Quiz","useContext","useStore","step","setStep","score","setScore","isDone","setIsDone","alert","sm","width","src","require","answer","shuffle","choices","App","exact","path","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","CssBaseline","ThemeProvider","theme","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e20bbb78.chunk.js","sourcesContent":["var map = {\n\t\"./boxing.png\": 54,\n\t\"./darts.png\": 55,\n\t\"./suikyu.png\": 56,\n\t\"./sumo.png\": 57\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 53;","module.exports = __webpack_public_path__ + \"static/media/boxing.5c1e671c.png\";","module.exports = __webpack_public_path__ + \"static/media/darts.bd156952.png\";","module.exports = __webpack_public_path__ + \"static/media/suikyu.afc52e6b.png\";","module.exports = __webpack_public_path__ + \"static/media/sumo.fcb911aa.png\";","import { createMuiTheme } from \"@material-ui/core/styles\";\n\nexport default createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#ef6c00\",\n    },\n    secondary: {\n      main: \"#0d47a1\",\n    },\n  },\n});\n","import React, { useState } from \"react\";\nimport {\n  Button,\n  Typography,\n  Box,\n  Grid,\n  Select,\n  MenuItem,\n  Container,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Redirect } from \"react-router-dom\";\n\nfunction Home() {\n  const [isEnter, setIsEnter] = useState(\"\");\n  const handleEnter = () => {\n    setIsEnter(true);\n  };\n\n  if (isEnter) {\n    return <Redirect push to=\"/quiz\" />;\n  }\n\n  return (\n    <>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <div>\n          <Grid\n            container\n            alignContent=\"center\"\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n            <Grid item xs={12}>\n              <Typography component=\"h1\" variant=\"h5\">\n                Try Quiz\n              </Typography>\n            </Grid>\n          </Grid>\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleEnter}\n          >\n            Enter\n          </Button>\n        </div>\n      </Container>\n    </>\n  );\n}\n\nexport default Home;\n","const combineReducers = reducer => {\n  return (state = {}, action) => {\n    const keys = Object.keys(reducer);\n    const nextReducers = {};\n    for (let i = 0; i < keys.length; i++) {\n      const invoke = reducer[keys[i]](state[keys[i]], action);\n      nextReducers[keys[i]] = invoke;\n    }\n    return nextReducers;\n  };\n};\n\nexport default combineReducers;\n","export const appState = {};\n\nexport default (state = appState, action) => {\n  switch (action.type) {\n    default: {\n      return state;\n    }\n  }\n};\n","import data from \"__mocks__/data\";\n\nexport const quizState = {\n  questions: data,\n};\n\nexport default (state = quizState, action) => {\n  switch (action.type) {\n    default: {\n      return state;\n    }\n  }\n};\n","import React, { createContext, useReducer, useContext, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport merge from \"lodash.merge\";\nimport combineReducers from \"./combineReducers\";\nimport { name, version } from \"../../package.json\";\nimport app, { appState } from \"./ducks/app\";\nimport quiz, { quizState } from \"./ducks/quiz\";\n\nconst rootReducer = combineReducers({\n  app,\n  quiz,\n});\n\nconst initialState = {\n  app: appState,\n  quiz: quizState,\n};\n\nconst persistedState = JSON.parse(localStorage.getItem(`${name}@${version}`));\nconst StoreContext = createContext(merge(initialState, persistedState));\n\nexport const useStore = () => {\n  const { state, dispatch } = useContext(StoreContext);\n  return { state, dispatch };\n};\n\nexport const StoreProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(rootReducer, initialState);\n  useEffect(() => {\n    localStorage.setItem(`${name}@${version}`, JSON.stringify(state));\n  }, [state]);\n  return (\n    <StoreContext.Provider value={{ state, dispatch }}>\n      {children}\n    </StoreContext.Provider>\n  );\n};\n\nStoreProvider.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n","import React, { useState } from \"react\";\nimport {\n  Button,\n  Typography,\n  Box,\n  Grid,\n  Select,\n  MenuItem,\n  Container,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useStore } from \"state/configureStore\";\nimport shuffle from \"lodash.shuffle\";\nimport { Redirect } from \"react-router-dom\";\n\nfunction Quiz() {\n  const { state } = useStore();\n  const { questions } = state.quiz;\n  const [step, setStep] = useState(0);\n  const [score, setScore] = useState(0);\n  const [isDone, setIsDone] = useState(false);\n  const handleAnswer = (answer) => {\n    if (questions[step].answer === answer) {\n      setScore(score + 1);\n    }\n    setStep(step + 1);\n  };\n\n  if (isDone) {\n    return <Redirect push to=\"/\" />;\n  }\n\n  if (step === questions.length) {\n    alert(\"Your score is \" + score);\n    setIsDone(true);\n    return <></>;\n  }\n\n  return (\n    <>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <Grid container>\n          <Grid item xs={12} sm={12}>\n            Score: {score}\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <img\n              width=\"120\"\n              src={require(`../../assets/images/${questions[step].answer}.png`)}\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            {shuffle(questions[step].choices).map((item) => {\n              return (\n                <div>\n                  <br />\n                  <Button\n                    onClick={() => {\n                      handleAnswer(item);\n                    }}\n                    variant=\"contained\"\n                    color=\"primary\"\n                  >\n                    {item}\n                  </Button>\n                  <br />\n                </div>\n              );\n            })}\n          </Grid>\n        </Grid>\n      </Container>\n    </>\n  );\n}\n\nexport default Quiz;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Home from \"./containers/Home\";\nimport Quiz from \"./containers/Quiz\";\n\nfunction App() {\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <Home />\n      </Route>\n      <Route exact path=\"/quiz\">\n        <Quiz />\n      </Route>\n    </Switch>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport theme from \"./views/styles/theme\";\nimport App from \"./views/App\";\nimport { StoreProvider } from \"./state/configureStore\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <StoreProvider>\n    <>\n      <CssBaseline />\n      <ThemeProvider theme={theme}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </ThemeProvider>\n    </>\n  </StoreProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}